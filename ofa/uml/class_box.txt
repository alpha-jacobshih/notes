@startuml

title Box/Rect classes declaration

class OSD << Singleton >> {
  +{static}get_instance() : OSD
  +draw()
  +draw_line(from_x, from_y, to_x, to_y)
  +draw_rect(x, y, w, h)
  +draw_circle(x, y, radius)
  +draw_text(x, y, font, size, text)
}

package box {
  class Rect {
    +int x
    +int y
    +int w
    +int h
    +left()
    +right()
    +top()
    +bottom()
    +is_left_of()
    +is_right_of()
    +is_above()
    +is_below()
    +is_empty()
    +is_adjacent()
    +is_intersected()
    +unite_with()
  }

  class Point {
    +int x
    +int y
    +operator<()
    +operator>()
    +operator==()
    +operator=()
    +operator+()
    +operator-()
  }

  class Box {
    #list<Rect> rects
    #Rect rect
    +get_rect() : const Rect&
    +is_adjacent(const Rect& rect)
    +is_intersected(const Rect& rect)
    +merge(const Box& box)
    +add(const Rect& rect)
    +remove(const Rect& rect)
  }
  note right
    #class 'Box' contains a set of mutual
        adjacent Rect instances.
    #the member 'rects' are the position
        and size of the adjacent blocks
        which compose the moving object.
    #the member 'rect' is the bounding
        box of the moving object.
  end note

  Box "1" *-- "n" Rect
  OSD <.. Box
}
/'package box'/

@enduml
